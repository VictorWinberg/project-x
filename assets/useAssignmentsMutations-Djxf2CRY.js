import{r as A,j as e,B as S,G as a,h as r,i as F,k as I,l as N,q as O,m}from"./index-BM8kQJxH.js";import{u as v,C as w}from"./index.esm-DfeXRGTT.js";import{u as C}from"./useContactsQueries-CYsO6A3v.js";import{s as E}from"./FlexGrow-Bqnr_mNz.js";import{A as x}from"./Autocomplete-r-w6HhcS.js";import{p as c,u as l,a as p}from"./useSnackbar-3YDI-vf-.js";const K=({onSubmit:s=()=>{},onChange:t,formProps:y,children:g,..._})=>{const{data:b=[]}=C(),{register:i,control:f,handleSubmit:h,watch:j}=v(y),u=j();return A.useEffect(()=>{t==null||t(u)},[t,u]),e.jsx(S,{..._,children:e.jsxs("form",{onSubmit:h(s),style:{...E},children:[e.jsxs(a,{container:!0,spacing:3,children:[e.jsx(a,{item:!0,xs:12,sm:6,children:e.jsx(r,{fullWidth:!0,label:"Uppdragsnamn",type:"text",margin:"none",...i("assignmentName")})}),e.jsx(a,{item:!0,xs:12,sm:6,children:e.jsx(w,{name:"responsiblePersonId",control:f,render:({field:o})=>e.jsx(x,{options:b,getOptionKey:n=>n.contactId,getOptionLabel:n=>`${n.firstName} ${n.lastName}`,onChange:(n,d)=>o.onChange(d?d.contactId:void 0),renderInput:n=>e.jsx(r,{...n,label:"Uppdragsgivare",variant:"outlined",fullWidth:!0})})})}),e.jsx(a,{item:!0,xs:12,sm:6,children:e.jsx(x,{multiple:!0,options:[],renderInput:o=>e.jsx(r,{...o,label:"Fastigheter",type:"text",...i("relevantFiles")}),limitTags:2,disableCloseOnSelect:!0})}),e.jsx(a,{item:!0,xs:12,sm:6,children:e.jsx(r,{fullWidth:!0,label:"Status",margin:"none",type:"text",...i("status")})}),e.jsx(a,{item:!0,xs:12,sm:6,children:e.jsx(r,{fullWidth:!0,label:"Typ",margin:"none",type:"text",...i("type")})}),e.jsx(a,{item:!0,xs:12,sm:6,children:e.jsx(r,{fullWidth:!0,label:"Arvode",margin:"none",type:"number",...i("fee")})})]}),g]})})},z=async()=>await O(`
    SELECT
      assignments.*,
      (rp.first_name || ' ' || rp.last_name) AS responsible_person_name,
      rp.email AS responsible_person_email,
      rc.company_name AS responsible_company_name,
      (ecp.first_name || ' ' || ecp.last_name) AS external_contact_person_name,
      ecp.email AS external_contact_person_email,
      ec.company_name AS external_company_name
    FROM assignments
    LEFT JOIN contacts rp ON responsible_person_id = rp.contact_id
    LEFT JOIN contacts ecp ON external_contact_person_id = ecp.contact_id
    LEFT JOIN companies rc ON rp.company_id = rc.company_id
    LEFT JOIN companies ec ON ecp.company_id = ec.company_id
  `),q=async s=>{await F("assignments",c(s,["assignmentName","responsiblePersonId","externalContactPersonId","relevantFiles","fee","type","status"]))},P=async s=>{await I("assignments",c(s,["assignmentName","responsiblePersonId","externalContactPersonId","relevantFiles","fee","type","status"]),c(s,["assignmentId"]))},T=async({assignmentId:s})=>{await N("assignments",{assignmentId:s})},B=()=>{const s=m(),{showSnackbar:t}=l();return p({mutationFn:q,onSuccess:()=>{s.invalidateQueries({queryKey:["assignments"]}),t("Uppdrag skapat!")}})},G=()=>{const s=m(),{showSnackbar:t}=l();return p({mutationFn:P,onSuccess:()=>{s.invalidateQueries({queryKey:["assignments"]}),t("Uppdrag uppdaterat!")}})},M=()=>{const s=m(),{showSnackbar:t}=l();return p({mutationFn:T,onSuccess:()=>{s.invalidateQueries({queryKey:["assignments"]}),t("Uppdrag borttaget!")}})};export{K as A,G as a,M as b,z as f,B as u};
